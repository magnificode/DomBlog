<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dominic Magnifico</title>
    <description>Dominic Magnifico | Front End Developer
</description>
    <link>http://dommagnifi.co/</link>
    <atom:link href="http://dommagnifi.co/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 10 Dec 2015 16:23:32 -0700</pubDate>
    <lastBuildDate>Thu, 10 Dec 2015 16:23:32 -0700</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      <item>
        <title>Being Comfortable With Being Uncomfortable</title>
        <description>&lt;p&gt;I’m a creature of habit. I think that’s probably true for most people, especially developers. We find comfort in the repetition of a well written loop. Everything comes out exactly uniform, just how we intended it.&lt;/p&gt;

&lt;p&gt;That uniformity, that comfort is something we all look for in times of stress. If things aren’t going right we always know we have that thing to be able to fall back on. If things get too uncomfortable we know where to look, and we know where we can go to fall back into the same routine. Quite recently I’ve realized the importance of reversing that train of thought. I’ve realized that it’s beneficial to be comfortable with being uncomfortable.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;That’s why I left my job.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Throughout some of my blog posts you may notice my mention of the company I worked for, Zenman. I want to preface this with the fact that the folks that work at Zenman are among some of the best people I know. Quite truly they were like family, and that’s what a good position at a good company does for you. It makes you feel at home. It makes you feel that if the job itself gets stressful, the people you spend your time with for most of your waking hours are the people you can fall back on. And that’s the truth about the position I held at Zenman. My colleagues were more than just that, they became friends, some even great friends, and I couldn’t be more thankful for that.&lt;/p&gt;

&lt;p&gt;Unfortunately there comes a time where you realize that perhaps you’re far too comfortable where you’re at. Maybe you’re not being challenged enough. And that’s the point that I got to quite recently. Because I ate and breathed Zenman for the past four years, I was not willing to come to terms with this. I’m 25 years old in a &lt;strong&gt;Senior&lt;/strong&gt; Development position. What on earth could I possibly have to complain about? The fact was that I didn’t feel challenged enough. And it got to the point where I decided that I needed to do what was best for me, and explore my options.&lt;/p&gt;

&lt;p&gt;For anyone out there who may be in a similar position than me let me just say one thing; There’s nothing more important than being completely and utterly respectful when you’re looking for a new job. Don’t let your work slip, don’t ditch your responsibilities and just say “Fuck it!”. Have the capacity and professionalism to realize that the place you’re working at right now was kind enough to hire you. They are still paying you to do quality work. Don’t let your peers down.&lt;/p&gt;

&lt;p&gt;It’s a weird spot to be in, looking out for yourself while still looking out for your colleagues. It certainly felt strange to me. I felt selfish. Since I was in a leadership position perhaps it was my job to burden all this stress for the sake of the team, so that they didn’t have to feel it. I rode with that for a while. I remember thinking this exact thought about 6 months ago and just riding it out thinking that it was my responsibility to handle it. But it reached a breaking point and I needed to make a change.&lt;/p&gt;

&lt;p&gt;I’ll never be able to repay the owner at Zenman for all the kindness he showed to me, or my co-workers for everything that they taught me. That is without a doubt the single biggest thing that I will miss, the people. But, as the title of this blog says, it’s time for me to start being comfortable with being uncomfortable. And there’s nothing more uncomfortable than starting a new job. But the biggest piece of advice I can offer to you dearest reader, is stick to your guns, realize when you begin to feel yourself slip into the icy grip of comfortability and make a change. Perhaps it doesn’t need to be as radical as leaving the company you work for. Perhaps it’s best to identify pain points in what you’re doing currently and offer solutions that may keep you on your toes a little more.&lt;/p&gt;

&lt;p&gt;Some change is good, as hard as it is to recognize. The change that you make will hopefully cultivate new exciting opportunities for you. And if it doesn’t…at least you know you tried.&lt;/p&gt;
</description>
        <pubDate>Fri, 25 Sep 2015 10:44:00 -0600</pubDate>
        <link>http://dommagnifi.co/update/2015/09/25/being-comfortable-with-being-uncomfortable.html</link>
        <guid isPermaLink="true">http://dommagnifi.co/update/2015/09/25/being-comfortable-with-being-uncomfortable.html</guid>
        
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>What I Learned From My First Speaking Gig</title>
        <description>&lt;p&gt;About six months ago one of the organizers of a local meetup group asked if I could give a talk.&lt;/p&gt;

&lt;p&gt;“We just need more development centered talks.”&lt;/p&gt;

&lt;p&gt;This was a hell of an opportunity for me to expand as a developer, and in the process help fellow colleagues learn. Of course, I agreed. I didn’t realize at the time that six months was not a whole lot of time. With a full time job, and other responsibilities, finding time to sit down and work on  my slides was a challenge.&lt;/p&gt;

&lt;p&gt;My talk was about process, and the importance it plays in an agency. The topic was at the front of my mind due to some changes happening at work. Some processes were falling through the cracks, and it was effecting everyone. I wanted to remind myself and everyone around me how important it is to stick to process, and how detrimental it can be to stray from it.&lt;/p&gt;

&lt;p&gt;I was able to get work done here and there. A couple slides one week, complete with speaker notes, another one the next. When it came down to a couple months before the talk I figured I needed to buckle down. Fast forward a couple of sleepless nights, and a weekend of pounding out slides I was finished. The slides weren’t anything complicated, but I had the content there to talk about.&lt;/p&gt;

&lt;p&gt;Now, I’m going to admit that I think I’m a pretty sketchy public speaker. I could definitely use some improvement, but I was hopeful this experience would help me do that. Because of that fear of public speaking, I looked over my slides constantly. I tried to memorize my notes, added some clarification here and there,  peppered in some gifs to keep people interested. About a week before the talk I began practicing with people I know. My girlfriend was kind enough to let me use her as an audience and give me some feedback. A few friends did the same. I thought I felt pretty darn good.&lt;/p&gt;

&lt;p&gt;A couple days before the talk I had a shroud of doubt cast over me. I was looking at my slides for the ten thousandth time, and the flow was off. It didn’t look like what I was talking about followed any coherent path. I thought I was jumping around from topic to topic without really explaining the main point. &lt;em&gt;I freaked out a little&lt;/em&gt;. What would it take to change the slides? Perhaps I should just scrap it all.&lt;/p&gt;

&lt;p&gt;That clearly wasn’t the right choice. I took a minute, closed my laptop and realized I had been looking at the slides for too long. I’m curious if most speakers get to this point, or if this was a product of my own making. Either way I was able to step back and take a fresh look the next day.&lt;/p&gt;

&lt;p&gt;The night of the talk I gave the slides one last look, practiced what I was going to say to a few co-workers and headed off.&lt;/p&gt;

&lt;p&gt;The talk went great.&lt;/p&gt;

&lt;p&gt;I opened up with some classic &lt;a href=&quot;https://www.youtube.com/watch?v=8To-6VIJZRE&quot;&gt;Steve Ballmer&lt;/a&gt;. That got everyone interested pretty quick. The talk proceeded and I felt like I knew what I was saying. Everyone seemed pretty interested. I slipped up here and there, caught myself say “um” a little too much, but kept going. At the end there were lots of questions too, which gave me a large bit of relief. People were interested and engaged. Everything ended up pretty well.&lt;/p&gt;

&lt;p&gt;The moral of this, and the advice I’d pass on to future first time speakers (even if it is in a small setting such as mine), would be to just follow your gut. You know the topic. You’ve been asked to speak based on what you know and that’s awesome. Regardless of how many times you look at your slides, or if you second guess what you’re writing, you know the topic. The slides are the hardest part, don’t overthink your notes, and trust your knowledge. Practice as much as you feel you need, but &lt;em&gt;don’t stress over it&lt;/em&gt;, you know what you want to say, and &lt;strong&gt;you’ll find the right way to say it&lt;/strong&gt;. &lt;a href=&quot;http://dommagnifi.co/update/2015/08/04/on-community.html&quot;&gt;The Design and Development Community&lt;/a&gt; is an amazing one. And most every person you meet will be happy to help you learn.&lt;/p&gt;
</description>
        <pubDate>Mon, 17 Aug 2015 03:00:00 -0600</pubDate>
        <link>http://dommagnifi.co/update/2015/08/17/what-i-learned-from-my-frist-speaking-gig.html</link>
        <guid isPermaLink="true">http://dommagnifi.co/update/2015/08/17/what-i-learned-from-my-frist-speaking-gig.html</guid>
        
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>On Community</title>
        <description>&lt;p&gt;It never ceases to amaze me how helpful the web development community is. It’s incredible to encounter people who are passionate about their craft.&lt;/p&gt;

&lt;p&gt;There’s been a lot of talk lately about suspending new features on the web. Some folks seem to think that it’s becoming too feature rich, too quickly. While I disagree with this sentiment, it’s this type of active discussion that I love. There have been countless responses both for and against that idea, and they all have good points! That’s what is so fascinating about what we do. We have the ability to disagree with an idea, but what empowers us is our logical mind. As much as we want to yell about how wrong the idea may be, or jump straight to Twitter, we pause and let that logic wash over us.&lt;/p&gt;

&lt;p&gt;This fosters a community of discussion and learning for everyone. We see both sides of the same coin and are then empowered to form our own opinion. It would seem that there are few other fields of work where this ecosystem exists. The stigma of the boring 9 to 5, go to work, head down all day, a slave to the clock. But (most of us) don’t have that. And even if we do, in reality, we can come to any number of places online and feel challenged. No matter how terrible you think your job is, this community provides an outlet to get back on the right path.&lt;/p&gt;

&lt;p&gt;The people (obviously) are what make the community so great. It blows me away how helpful and open to growth we all are. I, much like you I’m sure, have heard “Mind taking a look at this?” or “Think I could bounce a couple of ideas off you?” countless times. I don’t know about you, but every time I am asked any variation of that I get excited. Excited to help solve a new problem, or help to propel a colleague towards success in their project, to be part of a larger whole. Granted we all have our off days, I’m not exempt from that. But by and large the fact that anyone is asking you for help, is a huge compliment, and one that should not be taken lightly.&lt;/p&gt;

&lt;p&gt;The bottom line is I am thrilled to be a part of this community. There are countless opportunities right around the corner, and a horde of amazing people offering their support.&lt;/p&gt;
</description>
        <pubDate>Tue, 04 Aug 2015 01:47:00 -0600</pubDate>
        <link>http://dommagnifi.co/update/2015/08/04/on-community.html</link>
        <guid isPermaLink="true">http://dommagnifi.co/update/2015/08/04/on-community.html</guid>
        
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Enhancing Progressive Enhancement</title>
        <description>&lt;p&gt;As the famous Dave Rupert says, “It’s time for some * &lt;em&gt;Law and Order sound effect here&lt;/em&gt; * Hot Drama.”&lt;/p&gt;

&lt;p&gt;Yesterday the internet was abuzz with the technicalities of what Progressive Enhancement really is. A few posts popped up here and there of folks defending their respective sides of the argument. Now it goes without saying that this is a great thing, and obviously what the internet is intended to do, which is foster discussion. The two main articles I’ll reference in this little discussion are &lt;a href=&quot;https://adactio.com/journal/7774&quot;&gt;Jeremy Keith’s&lt;/a&gt; article, which is a response to &lt;a href=&quot;https://plus.google.com/+ScottJenson/posts/S23BqQsEuvR&quot;&gt;Scott Jenson’s&lt;/a&gt; post on Google+.&lt;/p&gt;

&lt;p&gt;Both of these articles make great points. Scott Jenson, in regards to building a camera app or a chat app, notes:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Of course you can have it fail gracefully. That is very reasonable but what are you left with, an elegant error dialog?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This statement cuts away all the mustard and gets at, what I believe to be, the Progressive Enhancement purists. This is the main point of Scott’s article. That in some cases Progressive Enhancement may not be an acceptable solution. Specifically when it comes down to the fact that the entire app is rendered useless by this practice, and &lt;em&gt;“…not everything devolves to content.”&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;While I certainly agree with Scott here, we have to take a step back for a second. This is one of the issues that I see come up time and time again in our industry. Everyone is taking these practices, or these ideologies, at face value. It’s either black, or it’s white. Zero or one. There is no middle ground. And that is where I think the hang-ups start.&lt;/p&gt;

&lt;p&gt;Much like the websites of yesteryear, we as developers need to be fluid. Able to adapt and interpret at the drop of a hat. Yes the description for Progressive Enhancement may be overtly specific, but much like any other process or principal, it’s the core of the idea that we need to take away. In regards to Progressive Enhancement that idea is the fact that not everyone is sitting on their MacBook Pro connected to their fancy Google Fiber internet connection. People on trains on their smartphones going through tunnels losing service, people who can’t afford the latest and greatest who are ecstatic to receive a donated cellphone or laptop with spotty service and connectivity, those are the people we need to keep in mind when we are developing. Our apps, our blogs, our client work, all of it needs to take into account the end user. We need to figure out how to give them the best experience utilizing the principals that an idea like Progressive Enhancement provides us.&lt;/p&gt;
</description>
        <pubDate>Tue, 23 Jun 2015 09:51:00 -0600</pubDate>
        <link>http://dommagnifi.co/update/2015/06/23/enhancing-progressive-enhancement.html</link>
        <guid isPermaLink="true">http://dommagnifi.co/update/2015/06/23/enhancing-progressive-enhancement.html</guid>
        
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>The Ellusive Development Process</title>
        <description>&lt;p&gt;In my previous posts I discussed &lt;a href=&quot;http://dommagnifi.co/update/2015/05/14/spinning-up-process.html&quot;&gt;how to start setting up processes within your team&lt;/a&gt;and &lt;a href=&quot;http://dommagnifi.co/update/2015/06/01/the-importance-of-company-wide-respect-for-process.html&quot;&gt;the integration of that process to the whole team&lt;/a&gt;. Feel free to check those posts out as well. This post however is the all about the ellusive development process. Which really is  &lt;a href=&quot;http://vincentp.me/blog/my-front-end-development-process-start-to-finish/&quot;&gt;not&lt;/a&gt; &lt;a href=&quot;http://blog.chartbeat.com/2014/01/30/modern-front-end-workflow-start-finish/&quot;&gt;that&lt;/a&gt; &lt;a href=&quot;https://www.codeschool.com/blog/2014/11/14/front-end-process/&quot;&gt;ellusive&lt;/a&gt; &lt;a href=&quot;http://code.tutsplus.com/tutorials/essential-tools-for-a-modern-front-end-development-workflow--pre-66083&quot;&gt;at&lt;/a&gt; &lt;a href=&quot;http://bradfrost.com/blog/post/development-is-design/&quot;&gt;all&lt;/a&gt;. All of these articles are fantastic by the way, and give insight into the front end development process. What follows is the adaptation I have taken from my few years in the industry. It is by no means comprehensive or perfect. As I mentioned previously no process is perfect, and any good process is iterated upon and constantly changing, so do not take this post as gospel, use it, improve it, and tell me all about it. Next to front end development, front end development process is a passion of mine as well.&lt;/p&gt;

&lt;h1 id=&quot;the-zenman-development-process&quot;&gt;The Zenman Development Process&lt;/h1&gt;

&lt;p&gt;So I’ve been with Zenman for almost three years now, and I can tell you first hand that our process has grown and evolved tremendously over those three years. Back in the day we were getting printed out documents that had our schedules for the week on them, we weren’t using much of a client management tool, and our development processes were pretty much developer specific. Now don’t get me wrong, there was a method to this, and it worked pretty damn well for the company at the time. But of course, it needed to evolve.&lt;/p&gt;

&lt;h1 id=&quot;the-tools&quot;&gt;The Tools&lt;/h1&gt;

&lt;p&gt;Of course there is no one set of tools that is perfect. Much like your processes, it’s a long journey of trial and error before you find that sweet spot. I’m going to go over the tools that we use and how they fit into our process.&lt;/p&gt;

&lt;h2 id=&quot;project-management&quot;&gt;Project Management&lt;/h2&gt;

&lt;p&gt;As much as we all loved the printer paper schedule, it was very hard for us to be able to keep track of all the individual items that needed to be done for each of our projects. That’s where &lt;a href=&quot;http://www.basecamp.com&quot;&gt;basecamp&lt;/a&gt; comes in.&lt;/p&gt;

&lt;p&gt;Basecamp gives us the ability to add projects. Within these projects we can add specific to-do’s with due dates, and assign them to people. In addition we also gain the ability to have active discussions with the client, something that has proved to be quite valuable for us since we are always working with the client in regards to their design. Basecamp has a ton of features, and if you don’t have a project management solution it’s definitely worth checking out.&lt;/p&gt;

&lt;p&gt;Now within basecamp we have a specific structure for to-dos, we have a bunch of pre-defined templates that outline everything from our approval process from clients, to items that need to happen in order for us to consider a site launch successful. We have many many process oriented lists in basecamp that help to streamline our jobs, and these are all specific to Zenman, over the years we have established things that work, and things that do not. Not only for us, but for our clients. These to-do lists, and basecamp documents are incredibly helpful for us to stay on track and for us to keep a running paper trail of all communications with clients. We have protocol that forces us to ensure that everything is documented in basecamp to ensure clear, transparent communications with the client. This way, nobody is out of the loop, and anyone can jump into a project and be informed to tackle any issue or request.&lt;/p&gt;

&lt;h2 id=&quot;agile-development&quot;&gt;Agile Development&lt;/h2&gt;

&lt;p&gt;There are a few tools out there that help to aid shops in staying agile. All of them center around stories, and an acceptance process with the Product Owner.&lt;a href=&quot;http://www.pivotaltracker.com&quot;&gt;Pivotal Tracker&lt;/a&gt; is our tool of choice for our agile projects. This gives us a much more granular view of exactly what prices need to be built into a website.&lt;/p&gt;

&lt;p&gt;We start by adding a project. Within this project we import a library of stories that are true for any responsive website. We’ve set up a public instance of an example project &lt;a href=&quot;https://www.pivotaltracker.com/n/projects/914224&quot;&gt;here&lt;/a&gt;. I’ll let that project do most of the explaining, but the main takeaway here is that this gives us a very granular and trackable view of how a project is going. One of our steps in the development of a site is for us to go over the functionality, and all the layouts, and input a tracker story for each feature. This gives us a high level view of the anticipated length of the project, and allows us to see exactly what we can expect to get done that week for that project.&lt;/p&gt;

&lt;p&gt;A bit of a side note here, we consider a full ‘day’ to be six hours. There are company wide meetings, and a blocked out period first thing in the morning for developers to tackle small issues that can be resolved quickly. We do these things from 8-9 in the morning so that directly afterwords we can jump right in to the big stuff, and sty focused on it for the whole day.&lt;/p&gt;

&lt;p&gt;Each story is assigned a point value, or a level of effort, and based off of that we set a velocity which then anticipates the amount of stories or points that we can complete each week.&lt;/p&gt;

&lt;h2 id=&quot;cms&quot;&gt;CMS&lt;/h2&gt;

&lt;p&gt;Every client that we work with needs to be able to update their content, or utilize a blogging platform. We use &lt;a href=&quot;http://www.WordPress.org&quot;&gt;WordPress&lt;/a&gt; for that. Most of the sites that we develop are WordPress sites, and we have some processes that go along with that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Starter Theme&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you google “WordPress Starter Theme” you’ll get a million results…Bones, Genesis, _S, Starkers etc. I’ve used a few of these, and Zenman started out with starkers, however a lot of these come with some bloat that we don’t necessarily need. So like all good developers, we built our own tool for the job. &lt;a href=&quot;https://github.com/zenman/zemplate&quot;&gt;Zemplate&lt;/a&gt;. Very minimal, with a sprinkle of mixins, functions, and ideologies that we at Zenman find very useful.&lt;/p&gt;

&lt;p&gt;Our template utilizes BEM for class naming structure, which helps to keep things clean and easy to understand regardless of the developer that looks at the project. We implemented a galactic version of Brad Frost’s &lt;a href=&quot;http://bradfrost.com/blog/post/atomic-web-design/&quot;&gt;Atomic Design System&lt;/a&gt; to help keep things modular. We not only modularize our SASS, but we also modularize our template parts, and javascript. Pretty much everything is modular.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ACF&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We found that keeping things modular allows us to build bits and pieces separate from everything else so that they can work anywhere on the site. We utilize a plugin called &lt;a href=&quot;http://www.advancedcustomfields.com/&quot;&gt;Advanced Custom Fields&lt;/a&gt;. Within advanced custom fields is a piece called Flexible Content. By default WordPress only has one text area for clients to manage content, and that didn’t work for us. Our layouts are complex enough that it is imperative for clients to be able to edit content throughout the site. ACF and flexible content allow us to do this. Because we build all our components modularly, we are able to build a call to action section once, and then utilize it anywhere on the site. The client has the ability in the backend to add this piece to any page and have it work every single time. This is huge, and if you use WordPress I would highly highly recommend using ACF.&lt;/p&gt;

&lt;h2 id=&quot;local-development&quot;&gt;Local Development&lt;/h2&gt;

&lt;p&gt;This one’s pretty easy, and there isn’t much process involved with this. We use &lt;a href=&quot;https://www.mamp.info/en/&quot;&gt;MAMP&lt;/a&gt; to develop locally. This gives you the ability to spin up a server locally and run a WordPress site on your machine. The only real standardization that we have here is our database naming structure. We have our local databases, prefixed with &lt;code class=&quot;highlighter-rouge&quot;&gt;l1_&lt;/code&gt;, we then utilize git and push to our git server which then pushes out to our development &lt;code class=&quot;highlighter-rouge&quot;&gt;d1_&lt;/code&gt;, testing &lt;code class=&quot;highlighter-rouge&quot;&gt;t1_&lt;/code&gt; and staging &lt;code class=&quot;highlighter-rouge&quot;&gt;s1_&lt;/code&gt; servers.&lt;/p&gt;

&lt;p&gt;This utilizes some git hook sorcery that I will not pretend to be privy to. But it’s awesome, and my co-worker &lt;a href=&quot;http://www.codepen.io/tcmulder&quot;&gt;Tomas Mulder&lt;/a&gt; is a git sorcerer. Ask him about it, and it’ll go right over your head.&lt;/p&gt;

&lt;h2 id=&quot;version-control&quot;&gt;Version Control&lt;/h2&gt;

&lt;p&gt;Every development team needs some sort of version control to prevent catastrophic overwrites and terrible terrible headaches. Something I’ve definitely never experienced…&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://git-scm.com/&quot;&gt;Git&lt;/a&gt; is what we use for that. As I mentioned, I’m not the most  versed in the land of git, but we have a few very slick git hooks that will push up the databases in addition to the files whenever we make a change. And depending on the branch you are on locally, it will push up to the correct server (dev, test or stage).&lt;/p&gt;

&lt;p&gt;The one thing that we do make sure to do process-wise, is write clean, well thought out commit messages.&lt;/p&gt;

&lt;h2 id=&quot;reviews-and-testing&quot;&gt;Reviews and Testing&lt;/h2&gt;

&lt;p&gt;Once a developer has completed the development of the project to the best of his or her knowledge we have a few steps to take before we send the project to the client.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Browser Testing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The developer will go in on their own and browser test their site in our supported browsers (The latest version and two prior major versions of Firefox, Chrome, Safari and Internet Explorer). Once all the bugs are fixed the site moves into Code Audit.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Audit&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The developer and a Senior Developer will then sit down and go over the code at a high level. This step is crucial to ensure a consistency in the way that our code is written. We’ve found that when working with multiple developers it is crucial to ensure the code can be traversed by any developer at the company. We ensure things are modular, that the BEM class naming structure has been adhered to. We test the site speed and make sure that the site does not choke on slower connections or is unreasonably slow. Is the code commented in places where it makes sense (i.e complex javascript or PHP. Including usage examples). Are you using &lt;code class=&quot;highlighter-rouge&quot;&gt;!importants&lt;/code&gt;? I’m pretty well known at Zenman for making developers write out explanations when an &lt;code class=&quot;highlighter-rouge&quot;&gt;!important&lt;/code&gt; is used…I’m very specific about specificity.&lt;/p&gt;

&lt;p&gt;These meetings are great because the Senior Dev gets to see the progression of the other developers at the company, but also gets to help shape the quality of code that the company produces. Every single one of these that I have done has yielded a learning experience on both ends of the table. If you can afford one more step in your process, add a Code Audit. It’ll dramatically change the code quality your company produces.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;QA&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This step gets a fresh set of eyes on the project. This new person will scour the site on all browsers again, and make note of any discrepancies between design and production.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;QC&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Once QA is complete, one of the folks from the business side of things will ensure that contractually, everything has been addressed and delivered. We again test this in all browsers to make sure we didn’t miss a single thing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Alpha&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Finally the site makes it to the client. We give them a chance to review the site, and provide one round of feedback. It’s important for us to ensure that the client at least has one iteration of back and forth in regards to their site. This also gives us the opportunity to defend some design decisions, and explain to the client exactly why we chose to utilize specific functionality.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Staging and Launch&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is the most process intensive step and varies drastically depending on your companies set up. But this is our chance as developers to check, check again, check one more time, freak out because we have a ‘feeling’ that we missed something, realize we didn’t, close our eyes, and then hit the button.&lt;/p&gt;

&lt;p&gt;Here’s a list of items we ensure happen on every stage and launch that we do.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ensure it is before 2:00 MST.&lt;/li&gt;
  &lt;li&gt;Back up live code and database to Zenman servers.&lt;/li&gt;
  &lt;li&gt;Identify in changelog that the site is being staged.&lt;/li&gt;
  &lt;li&gt;Begin staging preparation locally on the &lt;code class=&quot;highlighter-rouge&quot;&gt;stage&lt;/code&gt; branch.&lt;/li&gt;
  &lt;li&gt;Confirm Google Analytics code is added (may not start tracking until the site is live).&lt;/li&gt;
  &lt;li&gt;Confirm site uses compressed JavaScript files.&lt;/li&gt;
  &lt;li&gt;Confirm style.css is compressed.&lt;/li&gt;
  &lt;li&gt;Empty the WordPress page trash and posts trash.&lt;/li&gt;
  &lt;li&gt;[initial launch] Add new admin user for client and add credentials to client_info.rtf.&lt;/li&gt;
  &lt;li&gt;Push stage branch to gitlab.&lt;/li&gt;
  &lt;li&gt;Confirm 444 permissions for .htaccess/wp-config. !important&lt;/li&gt;
  &lt;li&gt;Delete project code and databases from dev and test servers&lt;/li&gt;
  &lt;li&gt;Confirm Site works with and without www.&lt;/li&gt;
  &lt;li&gt;Verify Google Analytics is rendering on live site.&lt;/li&gt;
  &lt;li&gt;Confirm that it’s possible to log into the WordPress backend.&lt;/li&gt;
  &lt;li&gt;Verify sitemap URLs use the live site’s address.&lt;/li&gt;
  &lt;li&gt;Backup new code and database in client folder on zenmass.&lt;/li&gt;
  &lt;li&gt;Remove the outdated site’s directory and delete it’s database (but leave it’s user).&lt;/li&gt;
  &lt;li&gt;Identify in the changelog that the launch is complete.&lt;/li&gt;
  &lt;li&gt;[initial launch] Ask project manager to schedule a retro.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And that, ladies and gentlemen, is where I’m going to end the worlds longest development process blog post. If you stuck with me this far, congratulations here’s a gif to reward you.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://bukk.it/annodomini.gif&quot; alt=&quot;alt text&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This series of posts will be turned into a talk that I’ll be doing at Refresh Denver on August 12th. &lt;a href=&quot;http://www.meetup.com/refreshdenver/events/219844847/&quot;&gt;Check it out and RSVP if you’re interested!&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 16 Jun 2015 09:51:00 -0600</pubDate>
        <link>http://dommagnifi.co/update/2015/06/16/the-ellusive-development-process.html</link>
        <guid isPermaLink="true">http://dommagnifi.co/update/2015/06/16/the-ellusive-development-process.html</guid>
        
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>The Importance of Company-wide Respect for Process</title>
        <description>&lt;p&gt;In my previous post I discussed how to start setting up processes within your team. If you haven’t read it, check it out &lt;a href=&quot;http://dommagnifi.co/update/2015/05/14/spinning-up-process.html&quot;&gt;here&lt;/a&gt;. This post will focus more on the integration of that process to the whole team, and the importance of company wide adoption.&lt;/p&gt;

&lt;h2 id=&quot;start-at-the-top&quot;&gt;Start at The Top&lt;/h2&gt;

&lt;p&gt;The main point here is that business has to be on board with the process. At Zenman when we decide a process needs to some tweaking, or a new one is necessary, we take a few preliminary steps. We  begin by writing an explanation of any problems that the process will help to reduce. We follow that with any extra time that this process will add to the project. And finally we list any pros and cons associated with this new process.&lt;/p&gt;

&lt;p&gt;It is possible that the risk involved with the tweak in process may not be worth it to business. You as a developer or designer need to prepare yourself to be shot down. Take the concerns that business has and rework your plan. Get the high level folks on board and it’s all downhill from there.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://bukk.it/business.jpg&quot; alt=&quot;alt text&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;project-management&quot;&gt;Project Management&lt;/h2&gt;

&lt;p&gt;Once you’ve got business all warm and fuzzy about this fantastic new process, your likely next step will be to talk to project management. It’s important that your Project Managers / Account Managers are aware of this process change so that they can plan accordingly. There’s nothing that will piss off a PM or AM more than a change in process that affects the way they interact with the client. Ensuring that they fully understand the need for this process, and exactly what issues it will help to alleviate is real important.&lt;/p&gt;

&lt;p&gt;As long as your PM or AM is comfortable, and understands the process as well, they’ll have no problem adhering to it and ensuring that the client is aware of the change. Or, at the very least, they will ensure that the process is put into place for the next project.&lt;/p&gt;

&lt;h2 id=&quot;team-participation&quot;&gt;Team Participation&lt;/h2&gt;

&lt;p&gt;Throughout this whole process it’s important to keep your team in the loop. At Zenman we believe in being super transparent. Any time we think about implementing a change that could affect the whole team, we loop them in. From the very beginning we ask for input from the whole team in regards to this new, or improved, process and address any concerns that come up. This step should most definitely be integrated into the planning stage of your new process.&lt;/p&gt;

&lt;p&gt;This high level of transparency helps to ensure that your team is not blindsided by this change in process. It also works to ensure that your whole team has had a chance to voice their concerns.&lt;/p&gt;

&lt;p&gt;This section is a little bit smaller than the last, but without a doubt it is very important. You can be Captain Process all by yourself as much as you want, but if your the whole team isn’t on board then you’re setting yourself up for failure. Collaboration within your department yields huge benefits, and will without a doubt expedite the process when you present your idea to business.&lt;/p&gt;

&lt;p&gt;This series of posts will be turned into a talk that I’ll be doing at Refresh Denver on August 12th. &lt;a href=&quot;http://www.meetup.com/refreshdenver/events/219844847/&quot;&gt;Check it out and RSVP if you’re interested!&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 01 Jun 2015 09:51:00 -0600</pubDate>
        <link>http://dommagnifi.co/update/2015/06/01/the-importance-of-company-wide-respect-for-process.html</link>
        <guid isPermaLink="true">http://dommagnifi.co/update/2015/06/01/the-importance-of-company-wide-respect-for-process.html</guid>
        
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Spinning Up Process</title>
        <description>&lt;p&gt;As every good developer knows, a process is crucial to the success of your project. Without it, clients run amok, design changes seven times, development never has a clear objective, and the project becomes an all around disaster. Process is important, it keeps everyones eye on the prize. At Zenman, I’ve spent the past 3 and a half years cultivating a process that I believe works quite well.&lt;/p&gt;

&lt;p&gt;One thing that I want to preface here, and I’ll refrence this point a bunch, is that your process is never &lt;strong&gt;EVER&lt;/strong&gt; perfect. I can’t think of a single process that I’ve been a part of that didn’t have some room for improvement. So keep in mind, the fact that you’re even trying to lay out a process, is a step in the right direction. You’re going to change it, iterate on it, and ultimately improve upon it.&lt;/p&gt;

&lt;h2 id=&quot;setting-the-right-processes-in-place&quot;&gt;Setting the Right Processes in Place&lt;/h2&gt;

&lt;p&gt;When first developing our process at Zenman we had to establish exactly what it was we were trying to accomplish. Where are we headed? What exactly is that prize we should be keeping our eyes on. What it came down to was simply the fact that we wanted a process that provided designers, developers, and business with all of the information that is needed for the project right off the bat. Leave no stone unturned.&lt;/p&gt;

&lt;p&gt;The first step in attaining this goal was to hold a discovery meeting, which for Zenman, is our first deep dive into what the client is all about. This meeting incorporates every member of the team for this specific project. Everyone from Project Manager and Sales Exec, to Developer and Designer, all the way up to the CEO sits in on this meeting.&lt;/p&gt;

&lt;p&gt;We incorporate everyone in this meeting for a very specific reason, and that is because without full immersion in the process, your process is more likely to fail. Having everyone participate in this meeting gives us all the preparation we need for the project as a whole. And not only that, it gives each department insight into the other departments processes and methodology. This then helps sales people to sell better, because they understand our development process, and can explain to clients more readily and knowledgeably about how that process works. Everyone benefits from having a high level understanding of how the other departments work, thus creating a more seemless project and inevitably a better product.&lt;/p&gt;

&lt;p&gt;Just to give you a little insight into our discovery process, from a development standpoint, during the discovery we ask some technical questions like where is your current site hosted, where is your domain registered, how are your emails set up, and how do we access your google analytics. This gives us the power to complete steps within our process that are both immediate, and further down the line, so that a back and forth does not need to occur between developer and client. Having a clear goal in place makes a project ridiculously more manageable.&lt;/p&gt;

&lt;h2 id=&quot;is-it-scalable&quot;&gt;Is it Scalable?&lt;/h2&gt;

&lt;p&gt;One of the best things about the process that we implemented at Zenman is that it is effective for projects of all sizes. From Fortune 500 companies down to startups, our process works. There is no more tempting time to skip out on process then on a small project. This is where you kind of have to reign in the project managers and sales folks. At this point, a PM or AM will try to tempt you with promises of gold and mir to break process and get the task done in record time.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://bukk.it/noooooooooo.gif&quot; alt=&quot;nope nope nope&quot; title=&quot;noooooooooo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;DON’T DO IT! Sticking to the process may incur a little bit of extra time up front, but for the love of God it has the potential to save your ass in the long run.&lt;/p&gt;

&lt;p&gt;Nothing like an example to help justify my claim…one of our steps in the process, almost immediately after our discovery meeting, is to run a smoke test on the clients server. A smoke test for anyone interested is just an automated test that runs through a series of tasks to ensure that, in our case, the clients server is set up to handle a WordPress installation. There have been a few times where the process doesn’t get followed, the client drags their feet in getting us hosting credentials, and all of the sudden, it’s time to launch the site! Hooray right? Not exactly. I’ve tried to launch to a server where a smoke test was not ran before and run into castrophic problems…it’s running on PHP4…ssh isn’t enabled…the server was bit by a PC and is now a windows server…awful awful terrible things like that. And because of these things, the site didn’t get launched, and the project delivery date had to be extended, sometimes as long as weeks after the initial go live date.&lt;/p&gt;

&lt;p&gt;If process had been followed, we wouldn’t have run into these issues, they would have been resolved while development was happening, and the site would have gone live on the day it was supposed to.&lt;/p&gt;

&lt;p&gt;This is where I’ll end the post for now. Stay tuned for more like this as I intend to turn this series of posts into a talk that I’ll be giving in August at Refresh Denver. &lt;a href=&quot;http://www.meetup.com/refreshdenver/events/219844847/&quot;&gt;Check it out and RSVP if you’re interested!&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 14 May 2015 09:51:00 -0600</pubDate>
        <link>http://dommagnifi.co/update/2015/05/14/spinning-up-process.html</link>
        <guid isPermaLink="true">http://dommagnifi.co/update/2015/05/14/spinning-up-process.html</guid>
        
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Choosing Your Stack: Part 1</title>
        <description>&lt;p&gt;Ah yes. The question that plagues every developer looking to break into the Web App development field. A question that I have had to ask myself recently as well. Everyone knows there’s a million frameworks out there that will lead you down a particular path. Some are all encompassing stacks, like &lt;a href=&quot;http://mean.io/#!/&quot;&gt;MEAN&lt;/a&gt;, and of course you can mix and match your own. But how the heck are you supposed to choose between &lt;a href=&quot;http://emberjs.com/&quot;&gt;Ember&lt;/a&gt;, &lt;a href=&quot;http://backbonejs.org/&quot;&gt;Backbone&lt;/a&gt;, &lt;a href=&quot;https://angularjs.org/&quot;&gt;Angular&lt;/a&gt;, or &lt;a href=&quot;http://laravel.com/&quot;&gt;Laravel&lt;/a&gt; or the countless thousand other frameworks that exist.&lt;/p&gt;

&lt;p&gt;Through the next few posts, I’m going to walk you through the process that lead to the team I work with to choose our stack.&lt;/p&gt;

&lt;h2 id=&quot;choosing-your-projects&quot;&gt;Choosing Your Projects&lt;/h2&gt;

&lt;p&gt;The first and clearly most important step to this process is choosing which types of projects you want to work on. Are they single page apps? Or as the &lt;a href=&quot;http://en.wikipedia.org/wiki/Single-page_application&quot;&gt;Wikipedia&lt;/a&gt; page puts it…&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;…a web application or web site that fits on a single web page with the goal of providing a more fluid user experience akin to a desktop application.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Or are you looking to build apps that adhere to the MVC (Model - View - Controller) principle, again, defined by &lt;a href=&quot;http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller&quot;&gt;Wikipedia&lt;/a&gt; as…&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;…a software architectural pattern for implementing user interfaces. It divides a given software application into three interconnected parts, so as to separate internal representations of information from the ways that information is presented to or accepted from the user&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The team I am working with landed on the single page app approach. After further research we established that this title of “single page” does not directly translate to a literal one page application, but actually describes an app that uses AJAX and api calls to render page content fluidly without a page load. Thus giving the illusion of a “single page” application.&lt;/p&gt;

&lt;p&gt;So far so good, we’ve established what type of apps we want to build. Currently we are in the phase of choosing actual tools to help us build the thing we want. I don’t have too much more info at the moment, but let me show you the tools we are looking into.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://emberjs.com/&quot;&gt;Ember&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://angularjs.org/&quot;&gt;Angular&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.meteor.com/&quot;&gt;Meteor.js&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://facebook.github.io/react/&quot;&gt;React.js&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://nodejs.org/&quot;&gt;Node&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://iojs.org/en/index.html&quot;&gt;io.js&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://symfony.com/&quot;&gt;Symfony&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://backbonejs.org/&quot;&gt;Backbone&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Obviously some of these are front end, others are backend. We are looking at all of these options and how they pair together. Each has their pros and cons but at the moment we need to figure out what set of tools will not only be most effective for the project, but we need to also figure out which tools play to the skills we currently have. Zenman is primarily a WordPress shop. That being said we have a pretty solid understanding of PHP, which makes us lean towards utilizing symfony as a the backend framework. We are still in the process but I think we have a good start. Updates to come as they develop.&lt;/p&gt;
</description>
        <pubDate>Thu, 19 Feb 2015 08:51:00 -0700</pubDate>
        <link>http://dommagnifi.co/update/2015/02/19/choosing-your-stack-part-1.html</link>
        <guid isPermaLink="true">http://dommagnifi.co/update/2015/02/19/choosing-your-stack-part-1.html</guid>
        
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>The Internet’s Own Boy</title>
        <description>&lt;p&gt;I had the pleasure of watching &lt;strong&gt;&lt;em&gt;The Internet’s Own Boy: The Story of Aaron Swartz&lt;/em&gt;&lt;/strong&gt;, and let me tell you, this documentary that highlights tragedy that is the US Justice system was quite eye opening.&lt;/p&gt;

&lt;p&gt;I’d like to preface with the fact that I think Aaron Swartz  was  one of the internet’s, if not this generation’s most influential figures. The guy was a damn genius, had incredible ideas for the web itself, and had an amazing desire to make documents that were in the public domain, easily accessible to the public.&lt;/p&gt;

&lt;p&gt;Public documents easily accessible to the public…not a crazy desire.&lt;/p&gt;

&lt;p&gt;The documentary goes into detail about what Mr. Swartz did with the whole Jstor MIT debacle, and essentially the FBI ended up investigating this person because he downloaded too many public documents, too quickly. It appears he had no intention of reselling these papers, or even posting them up for public viewing, it appears his intentions were to analyze the massive amounts of data, like he had done in the past, to try to improve specific things.&lt;/p&gt;

&lt;p&gt;I really connected with the documentary because of how deeply this person seemed to have touched the lives of every single person around him. Mr. Swartz was described as a person who just wanted to make the world a better place.&lt;/p&gt;

&lt;p&gt;The other thing that really made me pay attention was the fact that some people in the documentary had the view that the government was trying to make an example of Aaron to prevent people from shaking things up too much. “Hackers” like Aaron posed a threat to the government, and they wanted to scare the shit out of that group of people to prevent that shakeup from affecting their bottom dollar. It’s mind blowing to me that they drove this genius of a man to end his own life.&lt;/p&gt;

&lt;p&gt;In addition his contributions to slowing down and killing SOPA are possibly some of the most important contributions to preserving free speech on the internet to date.&lt;/p&gt;

&lt;p&gt;There was so much more Mr. Swartz had left to accomplish, so much good that he could have done for this broken system that we have, that we blissfully ignore and accept. The man saw a thing that was broken, that was censoring people and materials that should be available to everyone to further their knowledge. But the government realized how scary an informed public is, and ran him into the ground. The story is tragic, but it is one that every single person needs to be aware of, and informed about so that we can carry on his legacy and his goal to make the world a better place.&lt;/p&gt;

&lt;p&gt;If you want to watch the video it’s on Youtube and multiple other places. Check it out.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/vXr-2hwTk58&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Sat, 13 Dec 2014 18:09:00 -0700</pubDate>
        <link>http://dommagnifi.co/update/2014/12/13/the-internets-own-boy.html</link>
        <guid isPermaLink="true">http://dommagnifi.co/update/2014/12/13/the-internets-own-boy.html</guid>
        
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>A More Minimal Approach</title>
        <description>&lt;p&gt;Howdy folks!&lt;/p&gt;

&lt;p&gt;So after an absurd amount of time, I’ve decided to update my site. Not really featuring any work at the moment, but I definitely have plans for more features!&lt;/p&gt;

&lt;p&gt;One thing I really wanted to start doing was write. Any new technology that I’m learning, I’m going to start documenting here to help myself learn and recall.&lt;/p&gt;

&lt;p&gt;Thanks for taking a gander!&lt;/p&gt;
</description>
        <pubDate>Tue, 09 Dec 2014 10:24:11 -0700</pubDate>
        <link>http://dommagnifi.co/update/2014/12/09/a-more-minimal-approach.html</link>
        <guid isPermaLink="true">http://dommagnifi.co/update/2014/12/09/a-more-minimal-approach.html</guid>
        
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
